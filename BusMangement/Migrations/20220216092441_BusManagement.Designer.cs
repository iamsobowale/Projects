// <auto-generated />
using System;
using BusMangement;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BusMangement.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220216092441_BusManagement")]
    partial class BusManagement
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BusMangement.Models.Driver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("License")
                        .HasColumnType("text");

                    b.Property<int>("ParkId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("RegNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ParkId");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("BusMangement.Models.Park", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Parks");
                });

            modelBuilder.Entity("BusMangement.Models.ParkTrip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ParkId")
                        .HasColumnType("int");

                    b.Property<int>("TripId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParkId");

                    b.HasIndex("TripId");

                    b.ToTable("ParkTrips");
                });

            modelBuilder.Entity("BusMangement.Models.Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<int>("ParkId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("Registration")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ParkId");

                    b.ToTable("Staves");
                });

            modelBuilder.Entity("BusMangement.Models.Trip", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DestinationPoint")
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("StartingPoint")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Trips");
                });

            modelBuilder.Entity("BusMangement.Models.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CarType")
                        .HasColumnType("int");

                    b.Property<string>("DriverId")
                        .HasColumnType("text");

                    b.Property<int?>("DriverId1")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("NumberOfSeater")
                        .HasColumnType("int");

                    b.Property<int>("ParkId")
                        .HasColumnType("int");

                    b.Property<string>("RegNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("DriverId1");

                    b.HasIndex("ParkId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("BusMangement.Models.VehiclePayment", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpiringDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime");

                    b.Property<string>("VehicleId")
                        .HasColumnType("text");

                    b.Property<int?>("VehicleId1")
                        .HasColumnType("int");

                    b.Property<int>("payment")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("VehicleId1");

                    b.ToTable("VehiclePayments");
                });

            modelBuilder.Entity("BusMangement.Repositories.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("BusMangement.Models.Driver", b =>
                {
                    b.HasOne("BusMangement.Models.Park", "Park")
                        .WithMany("Drivers")
                        .HasForeignKey("ParkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BusMangement.Models.ParkTrip", b =>
                {
                    b.HasOne("BusMangement.Models.Park", "Park")
                        .WithMany("ParkTrips")
                        .HasForeignKey("ParkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusMangement.Models.Trip", "Trip")
                        .WithMany("ParkTrips")
                        .HasForeignKey("TripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BusMangement.Models.Staff", b =>
                {
                    b.HasOne("BusMangement.Models.Park", "Park")
                        .WithMany("Staves")
                        .HasForeignKey("ParkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BusMangement.Models.Vehicle", b =>
                {
                    b.HasOne("BusMangement.Models.Driver", "Driver")
                        .WithMany("Vehicles")
                        .HasForeignKey("DriverId1");

                    b.HasOne("BusMangement.Models.Park", "Park")
                        .WithMany("Vehicles")
                        .HasForeignKey("ParkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BusMangement.Models.VehiclePayment", b =>
                {
                    b.HasOne("BusMangement.Models.Vehicle", "Vehicle")
                        .WithMany("VehiclePayments")
                        .HasForeignKey("VehicleId1");
                });
#pragma warning restore 612, 618
        }
    }
}
